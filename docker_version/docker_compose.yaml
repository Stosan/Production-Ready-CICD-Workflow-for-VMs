# compose with monitoring
version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis.conf
    command:  [
      "redis-server", "/usr/local/etc/redis.conf",
      "--appendonly", "yes",
      "--stream-node-max-entries", "1000", 
      "--stream-node-max-bytes", "4096", 
    ]

  your_service:
    image: your_image
    volumes:
      - ./logs:/app/logs  # Expose logs to the host
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3" # Ensure Redis starts before this service
    depends_on:
      - redis  # Ensure Redis starts before this service

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/config.yml
    command: -config.file=/etc/loki/config.yml

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./logs:/app/logs
      - /var/log:/var/log
      - ./promtail-config.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - loki

volumes:
  redis-data:
  grafana-data: