services:
  your_app_service-1:
    environment:
      - IMAGE_TAG=${IMAGE_TAG}
    image: your_docker_username/your_dockerhub_repo:${IMAGE_TAG}
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 5s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - target: 8000
        published: 8001
        protocol: tcp
        mode: host
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8001/health"]
      interval: 42h
      timeout: 3s
      start_period: 5s
      retries: 1

  your_app_service-2:
    build:
      context: .
      dockerfile: Dockerfile
    image: your_image_name:latest
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 5s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - target: 8000
        published: 8002
        protocol: tcp
        mode: host
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8002/health"]
      interval: 42h
      timeout: 3s
      start_period: 5s
      retries: 1


  your_app_service-3:
    build:
      context: .
      dockerfile: Dockerfile
    image: your_image_name:latest
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 5s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - target: 8000
        published: 8003
        protocol: tcp
        mode: host
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8003/health"]
      interval: 42h
      timeout: 3s
      start_period: 5s
      retries: 1

  your_app_service-4:
    build:
      context: .
      dockerfile: Dockerfile
    image: your_image_name:latest
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 5s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - target: 8000
        published: 8004
        protocol: tcp
        mode: host
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8004/health"]
      interval: 42h
      timeout: 3s
      start_period: 5s
      retries: 1

networks:
  app-network:
    driver: overlay
    attachable: true

